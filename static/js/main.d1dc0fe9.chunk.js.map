{"version":3,"sources":["modules/home/img/profileCard.png","modules/home/containers/HomeContainter.js","modules/home/constants.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeContainer","className","id","class","href","target","without","rel","data-tippy-content","src","profile","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,yC,uJC6D5BC,MAzDf,WAEI,OACI,yBAAKC,UAAU,kFAGf,yBAAKC,GAAG,UAAUD,UAAU,4GAGxB,yBAAKA,UAAU,wCAEX,yBACAA,UAAU,uFAGV,wBAAIA,UAAU,mCCnBV,eDoBJ,yBAAKA,UAAU,qEACf,uBAAGA,UAAU,8EACT,uBAAGE,MAAM,oBACT,0BAAMF,UAAU,QAAhB,oCAEJ,uBAAGA,UAAU,2FACT,uBAAGA,UAAU,mBACb,uBAAGA,UAAU,OAAOG,KAAK,gCAAgCC,OAAO,SAASC,SAAO,EAACC,IAAI,uBAArF,sCAEJ,uBAAGN,UAAU,gBAAb,kCAEA,yBAAKA,UAAU,cACX,4BAAQA,UAAU,yHAAlB,iBAKJ,yBAAKA,UAAU,0FACX,uBAAGA,UAAU,OAAOG,KAAK,kCAAkCI,qBAAmB,mBAAmBH,OAAO,SAASC,SAAO,EAACC,IAAI,uBACzH,uBAAGJ,MAAM,qDAEb,uBAAGF,UAAU,OAAOG,KAAK,8BAA8BI,qBAAmB,mBAAmBH,OAAO,SAASC,SAAO,EAACC,IAAI,uBACrH,uBAAGJ,MAAM,6CAEb,uBAAGF,UAAU,OAAOG,KAAK,6BAA6BI,qBAAmB,mBAAmBH,OAAO,SAASC,SAAO,EAACC,IAAI,uBACpH,uBAAGJ,MAAM,+CASzB,yBAAKF,UAAU,mBACX,yBAAKQ,IAAKC,IAAST,UAAU,wDAAwDU,IAAI,YE9CtFC,MANf,WACE,OACE,kBAAC,EAAD,OCOgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d1dc0fe9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileCard.a5beed02.png\";","import React from 'react';\nimport profile from \"../img/profileCard.png\";\nimport * as c from '../constants';\n\nfunction HomeContainer(){\n\n    return(\n        <div className=\"max-w-4xl flex items-center h-auto lg:h-screen flex-wrap mx-auto my-32 lg:my-0\">\n    \n\n        <div id=\"profile\" className=\"w-full lg:w-3/5 rounded-lg lg:rounded-l-lg lg:rounded-r-none shadow-2xl bg-white opacity-75 mx-6 lg:mx-0\">\n        \n    \n            <div className=\"p-4 md:p-12 text-center lg:text-left\">\n\n                <div \n                className=\"block lg:hidden rounded-full shadow-xl mx-auto -mt-16 h-48 w-48 bg-cover bg-center\">\n                </div>\n                \n                <h1 className=\"text-3xl font-bold pt-8 lg:pt-0\">{c.NAME}</h1>\n                <div className=\"mx-auto lg:mx-0 w-4/5 pt-3 border-b-2 border-blue-900 opacity-25\"></div>\n                <p className=\"pt-4 text-base font-bold flex items-center justify-center lg:justify-start\">\n                    <i class=\"fa fa-briefcase\"/>\n                    <span className=\"ml-5\">Jr. Front-End Software Engineer</span>\n                </p>\n                <p className=\"pt-2 text-gray-600 text-xs lg:text-sm flex items-center justify-center lg:justify-start\">\n                    <i className=\"fa fa-building\"/>\n                    <a className=\"ml-6\" href=\"https://www.multisyscorp.com/\" target=\"_blank\" without rel=\"noopener noreferrer\">Multisys Technologies Corporation</a>\n                </p>\n                <p className=\"pt-8 text-sm\">M | 22 | General Trias, Cavite</p>\n    \n                <div className=\"pt-12 pb-8\">\n                    <button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n                      Get In Touch\n                    </button> \n                </div>\n    \n                <div className=\"mt-6 pb-16 lg:pb-0 w-4/5 lg:w-full mx-auto flex flex-wrap items-center justify-between\">\n                    <a className=\"link\" href=\"https://www.facebook.com/lmr021\" data-tippy-content=\"@facebook_handle\" target=\"_blank\" without rel=\"noopener noreferrer\">\n                        <i class=\"fa fa-2x fa-facebook-square hover:text-blue-600\"/>\n                    </a>\n                    <a className=\"link\" href=\"https://twitter.com/lmrl021\" data-tippy-content=\"@facebook_handle\" target=\"_blank\" without rel=\"noopener noreferrer\">\n                        <i class=\"fa fa-2x fa-twitter hover:text-blue-500\"/>\n                    </a>\n                    <a className=\"link\" href=\"https://github.com/lcsaria\" data-tippy-content=\"@facebook_handle\" target=\"_blank\" without rel=\"noopener noreferrer\">\n                        <i class=\"fa fa-2x fa-github hover:text-gray-400\"/>\n                    </a>\n                </div>\n                \n    \n            </div>\n    \n        </div>\n\n        <div className=\"w-full lg:w-2/5\">\n            <img src={profile} className=\"rounded-none lg:rounded-lg shadow-2xl hidden lg:block\" alt=\"lmrl\"/>            \n        </div>    \n    </div>\n    );\n}\n\nexport default HomeContainer;","export const NAME = \"Lmarl Saria\";","import React from 'react';\nimport HomeContainer from './modules/home/containers/HomeContainter';\n\nfunction App() {\n  return( \n    <HomeContainer/>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}